{"uid":"8ff5a77fda7f9dc1","name":"Weather should change based on condition","fullName":"Weather API Smoke tests: Weather should change based on condition","historyId":"7203c76915d7c550df5c47600eeda237","time":{"start":1655405514319,"stop":1655405514937,"duration":618},"description":"  Smoke tests for weather API","descriptionHtml":"<p>Smoke tests for weather API</p>\n","status":"failed","statusMessage":"\nexpected: \"drizzle.png\"\n but was: \"drizzle.jpeg\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"drizzle.png\"\n but was: \"drizzle.jpeg\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theConditionChangedAsExpected(WeatherApiSteps.java:63)\n\tat ✽.the condition with 'drizzle' is as expected(classpath:features/backend/smoke/WeatherAPI.feature:30)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"  Smoke tests for weather API","status":"failed","statusMessage":"\nexpected: \"drizzle.png\"\n but was: \"drizzle.jpeg\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"drizzle.png\"\n but was: \"drizzle.jpeg\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theConditionChangedAsExpected(WeatherApiSteps.java:63)\n\tat ✽.the condition with 'drizzle' is as expected(classpath:features/backend/smoke/WeatherAPI.feature:30)\n","steps":[{"name":"Given  the weather condition would change to 4","time":{"start":1655405514319,"stop":1655405514625,"duration":306},"status":"passed","steps":[],"attachments":[{"uid":"54b60d8b5a538b34","name":"Request","source":"54b60d8b5a538b34.html","type":"text/html","size":541},{"uid":"6dec6ce8f31bb2ef","name":"HTTP/1.1 200 ","source":"6dec6ce8f31bb2ef.html","type":"text/html","size":413}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false},{"name":"When  the weather forecast is found","time":{"start":1655405514625,"stop":1655405514935,"duration":310},"status":"passed","steps":[],"attachments":[{"uid":"cec03ae51e1bf878","name":"Request","source":"cec03ae51e1bf878.html","type":"text/html","size":365},{"uid":"f5f8e76d6d0687d7","name":"HTTP/1.1 200 ","source":"f5f8e76d6d0687d7.html","type":"text/html","size":789}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false},{"name":"Then  the condition with 'drizzle' is as expected","time":{"start":1655405514935,"stop":1655405514936,"duration":1},"status":"failed","statusMessage":"\nexpected: \"drizzle.png\"\n but was: \"drizzle.jpeg\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"drizzle.png\"\n but was: \"drizzle.jpeg\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theConditionChangedAsExpected(WeatherApiSteps.java:63)\n\tat ✽.the condition with 'drizzle' is as expected(classpath:features/backend/smoke/WeatherAPI.feature:30)\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":3,"attachmentsCount":4,"shouldDisplayMessage":false},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"tag","value":"smoke"},{"name":"host","value":"fv-az399-291"},{"name":"thread","value":"2151@fv-az399-291.TestNG-PoolService-0(15)"},{"name":"feature","value":"Weather API Smoke tests"},{"name":"story","value":"Weather should change based on condition"},{"name":"suite","value":"Weather API Smoke tests"},{"name":"testClass","value":"Weather should change based on condition"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"classpath:features/backend/smoke/WeatherAPI.feature"},{"name":"package","value":"features.backend.smoke.WeatherAPI_feature.Weather API Smoke tests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"conditionId","value":"4"},{"name":"conditionName","value":"drizzle"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["smoke","backend"]},"source":"8ff5a77fda7f9dc1.json","parameterValues":["4","drizzle"]}