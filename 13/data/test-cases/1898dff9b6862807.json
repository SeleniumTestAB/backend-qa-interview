{"uid":"1898dff9b6862807","name":"Weather should change based on temperature","fullName":"Weather API Smoke tests: Weather should change based on temperature","historyId":"c29103ccbb6edf919b74578163bffd5a","time":{"start":1655406984539,"stop":1655406987745,"duration":3206},"description":"  Smoke tests for weather API","descriptionHtml":"<p>Smoke tests for weather API</p>\n","status":"failed","statusMessage":"\nexpected: \"The weather is cold\"\n but was: \"The weather is freezing\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"The weather is cold\"\n but was: \"The weather is freezing\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theDescriptionShouldBeTheWeatherIsWeatherState(WeatherApiSteps.java:50)\n\tat ✽.the description should be 'The weather is cold'(classpath:features/backend/smoke/WeatherAPI.feature:8)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"  Smoke tests for weather API","status":"failed","statusMessage":"\nexpected: \"The weather is cold\"\n but was: \"The weather is freezing\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"The weather is cold\"\n but was: \"The weather is freezing\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theDescriptionShouldBeTheWeatherIsWeatherState(WeatherApiSteps.java:50)\n\tat ✽.the description should be 'The weather is cold'(classpath:features/backend/smoke/WeatherAPI.feature:8)\n","steps":[{"name":"Given  the temperature in 'fahrenheit' would be 34","time":{"start":1655406984548,"stop":1655406987116,"duration":2568},"status":"passed","steps":[],"attachments":[{"uid":"21d08bcf3d5e20c4","name":"Request","source":"21d08bcf3d5e20c4.html","type":"text/html","size":547},{"uid":"d44f8d96567856c8","name":"HTTP/1.1 200 ","source":"d44f8d96567856c8.html","type":"text/html","size":413}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"When  the weather forecast is found","time":{"start":1655406987159,"stop":1655406987626,"duration":467},"status":"passed","steps":[],"attachments":[{"uid":"8bcfc2ea8aed908e","name":"Request","source":"8bcfc2ea8aed908e.html","type":"text/html","size":365},{"uid":"e4f66be82401a1c4","name":"HTTP/1.1 200 ","source":"e4f66be82401a1c4.html","type":"text/html","size":784}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Then  the description should be 'The weather is cold'","time":{"start":1655406987626,"stop":1655406987663,"duration":37},"status":"failed","statusMessage":"\nexpected: \"The weather is cold\"\n but was: \"The weather is freezing\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"The weather is cold\"\n but was: \"The weather is freezing\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theDescriptionShouldBeTheWeatherIsWeatherState(WeatherApiSteps.java:50)\n\tat ✽.the description should be 'The weather is cold'(classpath:features/backend/smoke/WeatherAPI.feature:8)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":4,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"tag","value":"smoke"},{"name":"host","value":"fv-az128-475"},{"name":"thread","value":"2171@fv-az128-475.TestNG-PoolService-4(19)"},{"name":"feature","value":"Weather API Smoke tests"},{"name":"story","value":"Weather should change based on temperature"},{"name":"suite","value":"Weather API Smoke tests"},{"name":"testClass","value":"Weather should change based on temperature"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"classpath:features/backend/smoke/WeatherAPI.feature"},{"name":"package","value":"features.backend.smoke.WeatherAPI_feature.Weather API Smoke tests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"tempType","value":"fahrenheit"},{"name":"tempValue","value":"34"},{"name":"weatherState","value":"cold"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["smoke","backend"]},"source":"1898dff9b6862807.json","parameterValues":["fahrenheit","34","cold"]}