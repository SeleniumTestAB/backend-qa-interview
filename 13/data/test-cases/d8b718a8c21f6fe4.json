{"uid":"d8b718a8c21f6fe4","name":"Weather should change based on condition","fullName":"Weather API Smoke tests: Weather should change based on condition","historyId":"7203c76915d7c550df5c47600eeda237","time":{"start":1655406989025,"stop":1655406990007,"duration":982},"description":"  Smoke tests for weather API","descriptionHtml":"<p>Smoke tests for weather API</p>\n","status":"failed","statusMessage":"\nexpected: \"drizzle\"\n but was: \"mist\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"drizzle\"\n but was: \"mist\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theConditionChangedAsExpected(WeatherApiSteps.java:62)\n\tat ✽.the condition with 'drizzle' is as expected(classpath:features/backend/smoke/WeatherAPI.feature:30)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"  Smoke tests for weather API","status":"failed","statusMessage":"\nexpected: \"drizzle\"\n but was: \"mist\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"drizzle\"\n but was: \"mist\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theConditionChangedAsExpected(WeatherApiSteps.java:62)\n\tat ✽.the condition with 'drizzle' is as expected(classpath:features/backend/smoke/WeatherAPI.feature:30)\n","steps":[{"name":"Given  the weather condition would change to 4","time":{"start":1655406989025,"stop":1655406989507,"duration":482},"status":"passed","steps":[],"attachments":[{"uid":"f07c9b3b3f29144","name":"Request","source":"f07c9b3b3f29144.html","type":"text/html","size":541},{"uid":"a300f90f6104e9ec","name":"HTTP/1.1 200 ","source":"a300f90f6104e9ec.html","type":"text/html","size":413}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"When  the weather forecast is found","time":{"start":1655406989507,"stop":1655406990006,"duration":499},"status":"passed","steps":[],"attachments":[{"uid":"f5588d355fbbbf4","name":"Request","source":"f5588d355fbbbf4.html","type":"text/html","size":365},{"uid":"7d8b60fa63bcee1b","name":"HTTP/1.1 200 ","source":"7d8b60fa63bcee1b.html","type":"text/html","size":782}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Then  the condition with 'drizzle' is as expected","time":{"start":1655406990006,"stop":1655406990007,"duration":1},"status":"failed","statusMessage":"\nexpected: \"drizzle\"\n but was: \"mist\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"drizzle\"\n but was: \"mist\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theConditionChangedAsExpected(WeatherApiSteps.java:62)\n\tat ✽.the condition with 'drizzle' is as expected(classpath:features/backend/smoke/WeatherAPI.feature:30)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":4,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"tag","value":"smoke"},{"name":"host","value":"fv-az128-475"},{"name":"thread","value":"2171@fv-az128-475.TestNG-PoolService-0(15)"},{"name":"feature","value":"Weather API Smoke tests"},{"name":"story","value":"Weather should change based on condition"},{"name":"suite","value":"Weather API Smoke tests"},{"name":"testClass","value":"Weather should change based on condition"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"classpath:features/backend/smoke/WeatherAPI.feature"},{"name":"package","value":"features.backend.smoke.WeatherAPI_feature.Weather API Smoke tests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"conditionId","value":"4"},{"name":"conditionName","value":"drizzle"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["smoke","backend"]},"source":"d8b718a8c21f6fe4.json","parameterValues":["4","drizzle"]}