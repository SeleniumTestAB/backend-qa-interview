{"uid":"da3399d0703b1444","name":"Weather should change based on condition","fullName":"Weather API Smoke tests: Weather should change based on condition","historyId":"ac67d6a5c43f3328eadc8d6950c8f57","time":{"start":1655400579728,"stop":1655400580383,"duration":655},"description":"  Smoke tests for weather API","descriptionHtml":"<p>Smoke tests for weather API</p>\n","status":"failed","statusMessage":"\nexpected: \"mist\"\n but was: \"drizzle\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"mist\"\n but was: \"drizzle\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theConditionChangedAsExpected(WeatherApiSteps.java:62)\n\tat ✽.the condition with 'mist' is as expected(classpath:features/backend/smoke/WeatherAPI.feature:30)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"  Smoke tests for weather API","status":"failed","statusMessage":"\nexpected: \"mist\"\n but was: \"drizzle\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"mist\"\n but was: \"drizzle\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theConditionChangedAsExpected(WeatherApiSteps.java:62)\n\tat ✽.the condition with 'mist' is as expected(classpath:features/backend/smoke/WeatherAPI.feature:30)\n","steps":[{"name":"Given  the weather condition would change to 3","time":{"start":1655400579739,"stop":1655400580043,"duration":304},"status":"passed","steps":[],"attachments":[{"uid":"b5298db2bfc3b172","name":"Request","source":"b5298db2bfc3b172.html","type":"text/html","size":541},{"uid":"58cb37e84fabbe65","name":"HTTP/1.1 200 ","source":"58cb37e84fabbe65.html","type":"text/html","size":413}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"When  the weather forecast is found","time":{"start":1655400580044,"stop":1655400580381,"duration":337},"status":"passed","steps":[],"attachments":[{"uid":"5f65ff56e0a12e1f","name":"Request","source":"5f65ff56e0a12e1f.html","type":"text/html","size":365},{"uid":"4da28c8f0156637d","name":"HTTP/1.1 200 ","source":"4da28c8f0156637d.html","type":"text/html","size":789}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Then  the condition with 'mist' is as expected","time":{"start":1655400580381,"stop":1655400580382,"duration":1},"status":"failed","statusMessage":"\nexpected: \"mist\"\n but was: \"drizzle\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"mist\"\n but was: \"drizzle\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theConditionChangedAsExpected(WeatherApiSteps.java:62)\n\tat ✽.the condition with 'mist' is as expected(classpath:features/backend/smoke/WeatherAPI.feature:30)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":4,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"tag","value":"smoke"},{"name":"host","value":"fv-az163-581"},{"name":"thread","value":"2704@fv-az163-581.TestNG-PoolService-3(18)"},{"name":"feature","value":"Weather API Smoke tests"},{"name":"story","value":"Weather should change based on condition"},{"name":"suite","value":"Weather API Smoke tests"},{"name":"testClass","value":"Weather should change based on condition"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"classpath:features/backend/smoke/WeatherAPI.feature"},{"name":"package","value":"features.backend.smoke.WeatherAPI_feature.Weather API Smoke tests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"conditionId","value":"3"},{"name":"conditionName","value":"mist"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"dd097c05fa9beea1","status":"failed","statusDetails":"\nexpected: \"mist\"\n but was: \"drizzle\"","time":{"start":1655400548222,"stop":1655400548922,"duration":700}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"8a5c8c13ced93606","reportUrl":"https://SeleniumTestAB.github.io/backend-qa-interview/10//#testresult/8a5c8c13ced93606","status":"failed","statusDetails":"\nexpected: \"mist\"\n but was: \"drizzle\"","time":{"start":1655399204129,"stop":1655399204970,"duration":841}}]},"tags":["smoke","backend"]},"source":"da3399d0703b1444.json","parameterValues":["3","mist"]}