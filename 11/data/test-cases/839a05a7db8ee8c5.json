{"uid":"839a05a7db8ee8c5","name":"Weather should change based on condition","fullName":"Weather API Smoke tests: Weather should change based on condition","historyId":"b886b7acd7dbdbd9f55108525907deea","time":{"start":1655400579711,"stop":1655400580388,"duration":677},"description":"  Smoke tests for weather API","descriptionHtml":"<p>Smoke tests for weather API</p>\n","status":"failed","statusMessage":"\nexpected: \"clear\"\n but was: \"drizzle\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"clear\"\n but was: \"drizzle\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theConditionChangedAsExpected(WeatherApiSteps.java:62)\n\tat ✽.the condition with 'clear' is as expected(classpath:features/backend/smoke/WeatherAPI.feature:30)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"  Smoke tests for weather API","status":"failed","statusMessage":"\nexpected: \"clear\"\n but was: \"drizzle\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"clear\"\n but was: \"drizzle\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theConditionChangedAsExpected(WeatherApiSteps.java:62)\n\tat ✽.the condition with 'clear' is as expected(classpath:features/backend/smoke/WeatherAPI.feature:30)\n","steps":[{"name":"Given  the weather condition would change to 1","time":{"start":1655400579711,"stop":1655400580027,"duration":316},"status":"passed","steps":[],"attachments":[{"uid":"560ed3c68ba98ea1","name":"Request","source":"560ed3c68ba98ea1.html","type":"text/html","size":541},{"uid":"c159aca1dcae5403","name":"HTTP/1.1 200 ","source":"c159aca1dcae5403.html","type":"text/html","size":413}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"When  the weather forecast is found","time":{"start":1655400580027,"stop":1655400580381,"duration":354},"status":"passed","steps":[],"attachments":[{"uid":"8fdb82a5fa8f5f97","name":"Request","source":"8fdb82a5fa8f5f97.html","type":"text/html","size":365},{"uid":"f13b000024c795b9","name":"HTTP/1.1 200 ","source":"f13b000024c795b9.html","type":"text/html","size":789}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Then  the condition with 'clear' is as expected","time":{"start":1655400580381,"stop":1655400580388,"duration":7},"status":"failed","statusMessage":"\nexpected: \"clear\"\n but was: \"drizzle\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"clear\"\n but was: \"drizzle\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theConditionChangedAsExpected(WeatherApiSteps.java:62)\n\tat ✽.the condition with 'clear' is as expected(classpath:features/backend/smoke/WeatherAPI.feature:30)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":4,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"tag","value":"smoke"},{"name":"host","value":"fv-az163-581"},{"name":"thread","value":"2704@fv-az163-581.TestNG-PoolService-5(20)"},{"name":"feature","value":"Weather API Smoke tests"},{"name":"story","value":"Weather should change based on condition"},{"name":"suite","value":"Weather API Smoke tests"},{"name":"testClass","value":"Weather should change based on condition"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"classpath:features/backend/smoke/WeatherAPI.feature"},{"name":"package","value":"features.backend.smoke.WeatherAPI_feature.Weather API Smoke tests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"conditionId","value":"1"},{"name":"conditionName","value":"clear"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"95221949244a4a4a","status":"failed","statusDetails":"\nexpected: \"clear\"\n but was: \"drizzle\"","time":{"start":1655400548190,"stop":1655400548904,"duration":714}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"e32c48a8339c603d","reportUrl":"https://SeleniumTestAB.github.io/backend-qa-interview/10//#testresult/e32c48a8339c603d","status":"failed","statusDetails":"\nexpected: \"clear\"\n but was: \"drizzle\"","time":{"start":1655399204089,"stop":1655399204965,"duration":876}}]},"tags":["smoke","backend"]},"source":"839a05a7db8ee8c5.json","parameterValues":["1","clear"]}