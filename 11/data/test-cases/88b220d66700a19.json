{"uid":"88b220d66700a19","name":"Weather should change based on condition","fullName":"Weather API Smoke tests: Weather should change based on condition","historyId":"7203c76915d7c550df5c47600eeda237","time":{"start":1655400579809,"stop":1655400580481,"duration":672},"description":"  Smoke tests for weather API","descriptionHtml":"<p>Smoke tests for weather API</p>\n","status":"failed","statusMessage":"\nexpected: \"drizzle.png\"\n but was: \"drizzle.jpeg\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"drizzle.png\"\n but was: \"drizzle.jpeg\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theConditionChangedAsExpected(WeatherApiSteps.java:63)\n\tat ✽.the condition with 'drizzle' is as expected(classpath:features/backend/smoke/WeatherAPI.feature:30)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"  Smoke tests for weather API","status":"failed","statusMessage":"\nexpected: \"drizzle.png\"\n but was: \"drizzle.jpeg\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"drizzle.png\"\n but was: \"drizzle.jpeg\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theConditionChangedAsExpected(WeatherApiSteps.java:63)\n\tat ✽.the condition with 'drizzle' is as expected(classpath:features/backend/smoke/WeatherAPI.feature:30)\n","steps":[{"name":"Given  the weather condition would change to 4","time":{"start":1655400579810,"stop":1655400580157,"duration":347},"status":"passed","steps":[],"attachments":[{"uid":"91124c15a480fe01","name":"Request","source":"91124c15a480fe01.html","type":"text/html","size":541},{"uid":"a1408c8621bc351b","name":"HTTP/1.1 200 ","source":"a1408c8621bc351b.html","type":"text/html","size":413}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"When  the weather forecast is found","time":{"start":1655400580158,"stop":1655400580474,"duration":316},"status":"passed","steps":[],"attachments":[{"uid":"30fc5b5756f72479","name":"Request","source":"30fc5b5756f72479.html","type":"text/html","size":365},{"uid":"2f98913f8058045b","name":"HTTP/1.1 200 ","source":"2f98913f8058045b.html","type":"text/html","size":789}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Then  the condition with 'drizzle' is as expected","time":{"start":1655400580475,"stop":1655400580476,"duration":1},"status":"failed","statusMessage":"\nexpected: \"drizzle.png\"\n but was: \"drizzle.jpeg\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"drizzle.png\"\n but was: \"drizzle.jpeg\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theConditionChangedAsExpected(WeatherApiSteps.java:63)\n\tat ✽.the condition with 'drizzle' is as expected(classpath:features/backend/smoke/WeatherAPI.feature:30)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":4,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"tag","value":"smoke"},{"name":"host","value":"fv-az163-581"},{"name":"thread","value":"2704@fv-az163-581.TestNG-PoolService-0(15)"},{"name":"feature","value":"Weather API Smoke tests"},{"name":"story","value":"Weather should change based on condition"},{"name":"suite","value":"Weather API Smoke tests"},{"name":"testClass","value":"Weather should change based on condition"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"classpath:features/backend/smoke/WeatherAPI.feature"},{"name":"package","value":"features.backend.smoke.WeatherAPI_feature.Weather API Smoke tests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"conditionId","value":"4"},{"name":"conditionName","value":"drizzle"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"318ce98f8d3ecbb1","status":"failed","statusDetails":"\nexpected: \"drizzle.png\"\n but was: \"drizzle.jpeg\"","time":{"start":1655400548319,"stop":1655400548992,"duration":673}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"10adb120096eb51f","reportUrl":"https://SeleniumTestAB.github.io/backend-qa-interview/10//#testresult/10adb120096eb51f","status":"failed","statusDetails":"\nexpected: \"drizzle.png\"\n but was: \"drizzle.jpeg\"","time":{"start":1655399204139,"stop":1655399204974,"duration":835}}]},"tags":["smoke","backend"]},"source":"88b220d66700a19.json","parameterValues":["4","drizzle"]}