{"uid":"f3e002637a1ac1e6","name":"Weather should change based on temperature","fullName":"Weather API Smoke tests: Weather should change based on temperature","historyId":"348e393fa72d1c985d21a383b43d329e","time":{"start":1655399172346,"stop":1655399173255,"duration":909},"description":"  Smoke tests for weather API","descriptionHtml":"<p>Smoke tests for weather API</p>\n","status":"failed","statusMessage":"\nexpected: \"The weather is hot\"\n but was: \"The weather is \"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"The weather is hot\"\n but was: \"The weather is \"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theDescriptionShouldBeTheWeatherIsWeatherState(WeatherApiSteps.java:50)\n\tat ✽.the description should be 'The weather is hot'(classpath:features/backend/smoke/WeatherAPI.feature:8)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"  Smoke tests for weather API","status":"failed","statusMessage":"\nexpected: \"The weather is hot\"\n but was: \"The weather is \"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"The weather is hot\"\n but was: \"The weather is \"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theDescriptionShouldBeTheWeatherIsWeatherState(WeatherApiSteps.java:50)\n\tat ✽.the description should be 'The weather is hot'(classpath:features/backend/smoke/WeatherAPI.feature:8)\n","steps":[{"name":"Given  the temperature in 'fahrenheit' would be 77","time":{"start":1655399172347,"stop":1655399172762,"duration":415},"status":"passed","steps":[],"attachments":[{"uid":"32197b2d724dc54a","name":"Request","source":"32197b2d724dc54a.html","type":"text/html","size":547},{"uid":"7d819f84e3ff3bf2","name":"HTTP/1.1 200 ","source":"7d819f84e3ff3bf2.html","type":"text/html","size":413}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"When  the weather forecast is found","time":{"start":1655399172762,"stop":1655399173180,"duration":418},"status":"passed","steps":[],"attachments":[{"uid":"e8e15445eb826e0a","name":"Request","source":"e8e15445eb826e0a.html","type":"text/html","size":365},{"uid":"c4c511c7865564d7","name":"HTTP/1.1 200 ","source":"c4c511c7865564d7.html","type":"text/html","size":777}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Then  the description should be 'The weather is hot'","time":{"start":1655399173180,"stop":1655399173254,"duration":74},"status":"failed","statusMessage":"\nexpected: \"The weather is hot\"\n but was: \"The weather is \"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"The weather is hot\"\n but was: \"The weather is \"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theDescriptionShouldBeTheWeatherIsWeatherState(WeatherApiSteps.java:50)\n\tat ✽.the description should be 'The weather is hot'(classpath:features/backend/smoke/WeatherAPI.feature:8)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":4,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"tag","value":"smoke"},{"name":"host","value":"fv-az243-292"},{"name":"thread","value":"2216@fv-az243-292.TestNG-PoolService-0(15)"},{"name":"feature","value":"Weather API Smoke tests"},{"name":"story","value":"Weather should change based on temperature"},{"name":"suite","value":"Weather API Smoke tests"},{"name":"testClass","value":"Weather should change based on temperature"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"classpath:features/backend/smoke/WeatherAPI.feature"},{"name":"package","value":"features.backend.smoke.WeatherAPI_feature.Weather API Smoke tests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"tempType","value":"fahrenheit"},{"name":"tempValue","value":"77"},{"name":"weatherState","value":"hot"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["smoke","backend"]},"source":"f3e002637a1ac1e6.json","parameterValues":["fahrenheit","77","hot"]}