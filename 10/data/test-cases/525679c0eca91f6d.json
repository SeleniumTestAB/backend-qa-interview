{"uid":"525679c0eca91f6d","name":"Weather should change based on temperature","fullName":"Weather API Smoke tests: Weather should change based on temperature","historyId":"b2f704a776096391248045c32cf088f6","time":{"start":1655399199403,"stop":1655399203022,"duration":3619},"description":"  Smoke tests for weather API","descriptionHtml":"<p>Smoke tests for weather API</p>\n","status":"failed","statusMessage":"\nexpected: \"The weather is freezing\"\n but was: \"The weather is cold\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"The weather is freezing\"\n but was: \"The weather is cold\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theDescriptionShouldBeTheWeatherIsWeatherState(WeatherApiSteps.java:50)\n\tat ✽.the description should be 'The weather is freezing'(classpath:features/backend/smoke/WeatherAPI.feature:8)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"  Smoke tests for weather API","status":"failed","statusMessage":"\nexpected: \"The weather is freezing\"\n but was: \"The weather is cold\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"The weather is freezing\"\n but was: \"The weather is cold\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theDescriptionShouldBeTheWeatherIsWeatherState(WeatherApiSteps.java:50)\n\tat ✽.the description should be 'The weather is freezing'(classpath:features/backend/smoke/WeatherAPI.feature:8)\n","steps":[{"name":"Given  the temperature in 'fahrenheit' would be 32","time":{"start":1655399199403,"stop":1655399202357,"duration":2954},"status":"passed","steps":[],"attachments":[{"uid":"6f2989480785be4c","name":"Request","source":"6f2989480785be4c.html","type":"text/html","size":547},{"uid":"10904d0ba7a366c4","name":"HTTP/1.1 200 ","source":"10904d0ba7a366c4.html","type":"text/html","size":413}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"When  the weather forecast is found","time":{"start":1655399202358,"stop":1655399202818,"duration":460},"status":"passed","steps":[],"attachments":[{"uid":"1f3c97c3f4bcd172","name":"Request","source":"1f3c97c3f4bcd172.html","type":"text/html","size":365},{"uid":"627aae24d8ba01de","name":"HTTP/1.1 200 ","source":"627aae24d8ba01de.html","type":"text/html","size":781}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Then  the description should be 'The weather is freezing'","time":{"start":1655399202818,"stop":1655399203009,"duration":191},"status":"failed","statusMessage":"\nexpected: \"The weather is freezing\"\n but was: \"The weather is cold\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"The weather is freezing\"\n but was: \"The weather is cold\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theDescriptionShouldBeTheWeatherIsWeatherState(WeatherApiSteps.java:50)\n\tat ✽.the description should be 'The weather is freezing'(classpath:features/backend/smoke/WeatherAPI.feature:8)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":4,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"tag","value":"smoke"},{"name":"host","value":"fv-az243-292"},{"name":"thread","value":"2776@fv-az243-292.TestNG-PoolService-1(16)"},{"name":"feature","value":"Weather API Smoke tests"},{"name":"story","value":"Weather should change based on temperature"},{"name":"suite","value":"Weather API Smoke tests"},{"name":"testClass","value":"Weather should change based on temperature"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"classpath:features/backend/smoke/WeatherAPI.feature"},{"name":"package","value":"features.backend.smoke.WeatherAPI_feature.Weather API Smoke tests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"tempType","value":"fahrenheit"},{"name":"tempValue","value":"32"},{"name":"weatherState","value":"freezing"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d6c137b141413d5a","status":"failed","statusDetails":"\nexpected: \"The weather is freezing\"\n but was: \"The weather is cold\"","time":{"start":1655399168445,"stop":1655399172208,"duration":3763}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["smoke","backend"]},"source":"525679c0eca91f6d.json","parameterValues":["fahrenheit","32","freezing"]}