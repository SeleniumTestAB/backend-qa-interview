{"uid":"6be963119a6e43b7","name":"Weather should change based on temperature","fullName":"Weather API Smoke tests: Weather should change based on temperature","historyId":"180a82e35a087df20c8b8cd9e58fb908","time":{"start":1655399203138,"stop":1655399204003,"duration":865},"description":"  Smoke tests for weather API","descriptionHtml":"<p>Smoke tests for weather API</p>\n","status":"failed","statusMessage":"\nexpected: \"The weather is warm\"\n but was: \"The weather is hot\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"The weather is warm\"\n but was: \"The weather is hot\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theDescriptionShouldBeTheWeatherIsWeatherState(WeatherApiSteps.java:50)\n\tat ✽.the description should be 'The weather is warm'(classpath:features/backend/smoke/WeatherAPI.feature:8)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"  Smoke tests for weather API","status":"failed","statusMessage":"\nexpected: \"The weather is warm\"\n but was: \"The weather is hot\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"The weather is warm\"\n but was: \"The weather is hot\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theDescriptionShouldBeTheWeatherIsWeatherState(WeatherApiSteps.java:50)\n\tat ✽.the description should be 'The weather is warm'(classpath:features/backend/smoke/WeatherAPI.feature:8)\n","steps":[{"name":"Given  the temperature in 'fahrenheit' would be 75","time":{"start":1655399203139,"stop":1655399203602,"duration":463},"status":"passed","steps":[],"attachments":[{"uid":"c267a446faf416b7","name":"Request","source":"c267a446faf416b7.html","type":"text/html","size":547},{"uid":"170c6b3492d716dd","name":"HTTP/1.1 200 ","source":"170c6b3492d716dd.html","type":"text/html","size":413}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"When  the weather forecast is found","time":{"start":1655399203602,"stop":1655399204001,"duration":399},"status":"passed","steps":[],"attachments":[{"uid":"8d73e826318b3321","name":"Request","source":"8d73e826318b3321.html","type":"text/html","size":365},{"uid":"ea57f6e049aaf06f","name":"HTTP/1.1 200 ","source":"ea57f6e049aaf06f.html","type":"text/html","size":780}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Then  the description should be 'The weather is warm'","time":{"start":1655399204001,"stop":1655399204002,"duration":1},"status":"failed","statusMessage":"\nexpected: \"The weather is warm\"\n but was: \"The weather is hot\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"The weather is warm\"\n but was: \"The weather is hot\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theDescriptionShouldBeTheWeatherIsWeatherState(WeatherApiSteps.java:50)\n\tat ✽.the description should be 'The weather is warm'(classpath:features/backend/smoke/WeatherAPI.feature:8)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":4,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"tag","value":"smoke"},{"name":"host","value":"fv-az243-292"},{"name":"thread","value":"2776@fv-az243-292.TestNG-PoolService-5(20)"},{"name":"feature","value":"Weather API Smoke tests"},{"name":"story","value":"Weather should change based on temperature"},{"name":"suite","value":"Weather API Smoke tests"},{"name":"testClass","value":"Weather should change based on temperature"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"classpath:features/backend/smoke/WeatherAPI.feature"},{"name":"package","value":"features.backend.smoke.WeatherAPI_feature.Weather API Smoke tests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"tempType","value":"fahrenheit"},{"name":"tempValue","value":"75"},{"name":"weatherState","value":"warm"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"32df7be5a5715512","status":"failed","statusDetails":"\nexpected: \"The weather is warm\"\n but was: \"The weather is \"","time":{"start":1655399172314,"stop":1655399173162,"duration":848}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["smoke","backend"]},"source":"6be963119a6e43b7.json","parameterValues":["fahrenheit","75","warm"]}