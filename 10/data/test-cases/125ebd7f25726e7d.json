{"uid":"125ebd7f25726e7d","name":"Weather should change based on temperature","fullName":"Weather API Smoke tests: Weather should change based on temperature","historyId":"42a0e1cd9c5316002de772de207e8a03","time":{"start":1655399203130,"stop":1655399203992,"duration":862},"description":"  Smoke tests for weather API","descriptionHtml":"<p>Smoke tests for weather API</p>\n","status":"failed","statusMessage":"\nexpected: \"The weather is mild\"\n but was: \"The weather is hot\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"The weather is mild\"\n but was: \"The weather is hot\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theDescriptionShouldBeTheWeatherIsWeatherState(WeatherApiSteps.java:50)\n\tat ✽.the description should be 'The weather is mild'(classpath:features/backend/smoke/WeatherAPI.feature:8)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"  Smoke tests for weather API","status":"failed","statusMessage":"\nexpected: \"The weather is mild\"\n but was: \"The weather is hot\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"The weather is mild\"\n but was: \"The weather is hot\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theDescriptionShouldBeTheWeatherIsWeatherState(WeatherApiSteps.java:50)\n\tat ✽.the description should be 'The weather is mild'(classpath:features/backend/smoke/WeatherAPI.feature:8)\n","steps":[{"name":"Given  the temperature in 'fahrenheit' would be 67","time":{"start":1655399203130,"stop":1655399203596,"duration":466},"status":"passed","steps":[],"attachments":[{"uid":"d0842936967a4e2d","name":"Request","source":"d0842936967a4e2d.html","type":"text/html","size":547},{"uid":"de94ea50f69f5fb7","name":"HTTP/1.1 200 ","source":"de94ea50f69f5fb7.html","type":"text/html","size":413}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"When  the weather forecast is found","time":{"start":1655399203597,"stop":1655399203990,"duration":393},"status":"passed","steps":[],"attachments":[{"uid":"c001c5f174426945","name":"Request","source":"c001c5f174426945.html","type":"text/html","size":365},{"uid":"f0d0621e113c201e","name":"HTTP/1.1 200 ","source":"f0d0621e113c201e.html","type":"text/html","size":780}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Then  the description should be 'The weather is mild'","time":{"start":1655399203991,"stop":1655399203992,"duration":1},"status":"failed","statusMessage":"\nexpected: \"The weather is mild\"\n but was: \"The weather is hot\"","statusTrace":"org.opentest4j.AssertionFailedError: \nexpected: \"The weather is mild\"\n but was: \"The weather is hot\"\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat com.qa.interview.sollution.full.stack.sollution.steps.backend.WeatherApiSteps.theDescriptionShouldBeTheWeatherIsWeatherState(WeatherApiSteps.java:50)\n\tat ✽.the description should be 'The weather is mild'(classpath:features/backend/smoke/WeatherAPI.feature:8)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":4,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"backend"},{"name":"tag","value":"smoke"},{"name":"host","value":"fv-az243-292"},{"name":"thread","value":"2776@fv-az243-292.TestNG-PoolService-3(18)"},{"name":"feature","value":"Weather API Smoke tests"},{"name":"story","value":"Weather should change based on temperature"},{"name":"suite","value":"Weather API Smoke tests"},{"name":"testClass","value":"Weather should change based on temperature"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"classpath:features/backend/smoke/WeatherAPI.feature"},{"name":"package","value":"features.backend.smoke.WeatherAPI_feature.Weather API Smoke tests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"tempType","value":"fahrenheit"},{"name":"tempValue","value":"67"},{"name":"weatherState","value":"mild"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"13167aad022fdd40","status":"failed","statusDetails":"\nexpected: \"The weather is mild\"\n but was: \"The weather is \"","time":{"start":1655399172290,"stop":1655399173176,"duration":886}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["smoke","backend"]},"source":"125ebd7f25726e7d.json","parameterValues":["fahrenheit","67","mild"]}